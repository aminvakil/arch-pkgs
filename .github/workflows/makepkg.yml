---
name: Build
'on':
  push:
    branches:
      - "main"
  pull_request:

jobs:

  makepkg:
    name: makepkg
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - pkg: actionlint
          - pkg: ansible-cmdb
          - pkg: ansible-core-git
          - pkg: ansible-lint-git
          - pkg: assetfinder
          - pkg: assetfinder-git
          - pkg: awx
          - pkg: butane
          - pkg: butane-bin
          - pkg: ddosify
          - pkg: ddosify-git
          - pkg: docker-bench-security
          - pkg: docker-bench-security-git
          - pkg: docker-prune
          - pkg: dockle
          - pkg: drupal8-git
          - pkg: dstp
          - pkg: dstp-git
          - pkg: gnome-shell-extension-dash-to-dock-git
          - pkg: gnome-shell-extension-public-ip-git
          - pkg: gnome-shell-extension-workspace-matrix
          - pkg: google-tsunami-security-scanner
          - pkg: google-tsunami-security-scanner-git
          - pkg: google-tsunami-security-scanner-plugins-git
          # - pkg: hadolint-git
          - pkg: jmeter-plugins-manager
          - pkg: pumba
          - pkg: pumba-bin
          - pkg: python-spotdl
          - pkg: thelounge-beta
          - pkg: trivy-git
          - pkg: vim-markdown-git
          - pkg: xssmap
          - pkg: zoiper
    env:
      MIRROR_URL: https://mirrors.aminvakil.com/archlinux/
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v3

      - name: Exit if pkg doesn't exist.
        run: if [[ ! $(git ls-remote "https://aur.archlinux.org/${{ matrix.pkg }}.git") ]]; then exit 1; fi

      - name: Download and Extract package.
        run: |
          curl -OL "https://aur.archlinux.org/cgit/aur.git/snapshot/${{ matrix.pkg }}.tar.gz"
          tar -xvzf "${{ matrix.pkg }}.tar.gz"

      - name: Pull devel image.
        run: docker pull quay.io/aminvakil/archlinux:devel

      - name: Run a container of devel image and mount package on it.
        run: |
          container_id=$(mktemp)
          docker run --detach --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro -v "${PWD}/${{ matrix.pkg }}":/pkg quay.io/aminvakil/archlinux:devel > "${container_id}"
          echo "container_id=$container_id" >> $GITHUB_ENV

      - name: Execute stuff before makepkg if there is any.
        run: |
          if curl -ILs "https://github.com/aminvakil/aur/raw/master/ci/${{ matrix.pkg }}/before_makepkg.sh" --fail -o /dev/null; then
              curl -L "https://github.com/aminvakil/aur/raw/master/ci/${{ matrix.pkg }}/before_makepkg.sh" -o /tmp/before_makepkg.sh;
              docker exec -i "$(cat ${container_id})" sh < "/tmp/before_makepkg.sh"
          fi

      - name: Upgrade all packages.
        run: docker exec "$(cat ${container_id})" pacman -Syu --noconfirm

      - name: Change ownership of package folder
        run: "docker exec $(cat ${container_id}) chown -R devel: /pkg"

      - name: Makepkg!
        run: docker exec "$(cat ${container_id})" su devel sh -c "cd /pkg && makepkg -sri --check --noconfirm"

      - name: Execute stuff after makepkg if there is any.
        run: |
          if curl -ILs "https://github.com/aminvakil/aur/raw/master/ci/${{ matrix.pkg }}/after_makepkg.sh" --fail -o /dev/null; then
              curl -L "https://github.com/aminvakil/aur/raw/master/ci/${{ matrix.pkg }}/after_makepkg.sh" -o /tmp/after_makepkg.sh;
              docker exec -i "$(cat ${container_id})" sh < "/tmp/after_makepkg.sh"
          fi

      - name: Prepare PKGBUILD for Pull Request.
        id: PKGBUILD_PREPARE
        run: |
          pkg_name_ver_rel_temp=$(mktemp)
          docker exec -i "$(cat ${container_id})" su devel sh -c "pacman -Q ${{ matrix.pkg }}" > "${pkg_name_ver_rel_temp}"
          sudo chown -R runner:docker .
          mkdir -p "pkgbuilds/${{ matrix.pkg }}"
          mv "${{ matrix.pkg }}/PKGBUILD" "pkgbuilds/${{ matrix.pkg }}/PKGBUILD"
          pkg_name_ver_rel="$(cat ${pkg_name_ver_rel_temp})"
          echo "pkg_name_ver_rel=${pkg_name_ver_rel}" >> $GITHUB_ENV

      - name: Create Pull Request
        if: github.event_name != 'pull_request'
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: ${{ env.pkg_name_ver_rel }}
          committer: GitHub <noreply@github.com>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          signoff: false
          branch: ${{ matrix.pkg }}
          delete-branch: true
          title: ${{ matrix.pkg }}
          body: ${{ env.pkg_name_ver_rel }}
          draft: false
          add-paths: |
            pkgbuilds/${{ matrix.pkg }}/PKGBUILD

      - name: Check if package has been changed.
        run: |
          # We have archlinux container and we can use, it's better to use pacman database instead of this hack #
          package_diff="some"
          if curl -s "${MIRROR_URL}" | grep "${{ matrix.pkg }}" | head -n 1 | grep -Po '(?<=href=")[^"]*(?=")'; then
          remote_pkg=$(curl -s "${MIRROR_URL}" | grep "${{ matrix.pkg }}" | head -n 1 | grep -Po '(?<=href=")[^"]*(?=")')
          local_pkg=$(realpath ${{ matrix.pkg }}/${{ matrix.pkg }}*.pkg.tar.zst | sed 's/.*\///g')
          if [[ ${remote_pkg} == ${local_pkg} ]]; then
              curl "${MIRROR_URL}${remote_pkg}" -o remote_pkg.pkg.tar.zst
              mkdir -p remote_pkg local_pkg
              cp remote_pkg.pkg.tar.zst remote_pkg
              cp ${{ matrix.pkg }}/${{ matrix.pkg }}*.pkg.tar.zst local_pkg/local_pkg.pkg.tar.zst
              zstd -d remote_pkg/remote_pkg.pkg.tar.zst
              zstd -d local_pkg/local_pkg.pkg.tar.zst
              tar -xf remote_pkg/remote_pkg.pkg.tar
              tar -xf local_pkg/local_pkg.pkg.tar
              diff -x .BUILDINFO -x .PKGINFO -x .MTREE -x '*.tar' -x '*.tar.zst' remote_pkg local_pkg
              package_diff="none"
          fi
          fi
          echo "package_diff=${package_diff}" >> $GITHUB_ENV
          echo "remote_pkg=${remote_pkg}" >> $GITHUB_ENV

      - name: Push package to mirrors.
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && env.package_diff == 'some'
        run: |
          curl -X DELETE "${{ secrets.MIRROR_PATH }}${{ env.remote_pkg }}" ${{ secrets.AUTHORIZATION }} --fail
          curl -T ${{ matrix.pkg }}/${{ matrix.pkg }}*.pkg.tar.zst ${{ secrets.MIRROR_PATH }} ${{ secrets.AUTHORIZATION }} --fail

      - name: Stop and remove container forcefully.
        run: docker rm -f "$(cat ${container_id})"
